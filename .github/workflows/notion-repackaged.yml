name: repackage-notion-app

on:
  workflow_dispatch:
    inputs: {}

env:
  NOTION_REPACKAGED_DEBUG: true

jobs:
  preload-variables:
    name: preload variables
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - id: preload-variables
        name: load variables and set them as outputs
        run: |
          source env.sh
          echo "::set-output name=notion_version::$NOTION_VERSION"
          echo "::set-output name=notion_repackaged_edition::$NOTION_REPACKAGED_EDITION"
          echo "::set-output name=notion_repackaged_revision::$NOTION_REPACKAGED_REVISION"
          echo "::set-output name=notion_repackaged_version_rev::$NOTION_REPACKAGED_VERSION_REV"
    outputs:
      notion_version: ${{ steps.preload-variables.outputs.notion_version }}
      notion_repackaged_edition: ${{ steps.preload-variables.outputs.notion_repackaged_edition }}
      notion_repackaged_revision: ${{ steps.preload-variables.outputs.notion_repackaged_revision }}
      notion_repackaged_version_rev: ${{ steps.preload-variables.outputs.notion_repackaged_version_rev }}

  create-release:
    name: create release
    runs-on: ubuntu-latest
    needs: [preload-variables]
    steps:
      - uses: actions/checkout@v2
      - uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          version: ${{ needs.preload-variables.outputs.notion_repackaged_version_rev }}
          tag: v${{ needs.preload-variables.outputs.notion_repackaged_version_rev }}

  generate-sources:
    name: extract and patch vanilla and enhanced sources
    runs-on: ubuntu-latest
    needs: []
    steps:
      - uses: actions/checkout@v2
      - name: install build dependencies
        run: sudo apt install --no-install-recommends -y curl p7zip-full coreutils jq git imagemagick icnsutils
      - name: run build script
        run: ./build.sh --reset
      - name: zip vanilla source dir with 7z
        working-directory: build
        run: 7z a vanilla-src.zip vanilla-src
      - name: save vanilla source as artifact
        uses: actions/upload-artifact@v2
        with:
          name: vanilla-sources
          path: build/vanilla-src.zip
      - name: zip enhanced source dir with 7z
        working-directory: build
        run: 7z a enhanced-src.zip enhanced-src
      - name: save enhanced source as artifact
        uses: actions/upload-artifact@v2
        with:
          name: enhanced-sources
          path: build/enhanced-src.zip

  build-app:
    name: build app
    needs: [create-release, generate-sources]
    runs-on: ${{ matrix.os }}
    env:
      NOTION_VERSION: ${{ needs.preload-variables.outputs.notion_version }}
      NOTION_REPACKAGED_EDITION: ${{ needs.preload-variables.outputs.notion_repackaged_edition }}
      NOTION_REPACKAGED_REVISION: ${{ needs.preload-variables.outputs.notion_repackaged_revision }}
    strategy:
      matrix:
        target: [windows, linux, macos]
        edition: [vanilla, enhanced]
        include:
          - target: windows
            os: windows-latest
          - target: linux
            os: ubuntu-latest
          - target: macos
            os: macos-latest
        exclude:
          - target: windows
            edition: vanilla
          - target: macos
            edition: vanilla
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: retrieve saved sources
        uses: actions/download-artifact@v2
        with:
          name: ${{ matrix.edition }}-sources
          path: build/${{ matrix.edition }}-src.zip
      - name: unzip sources with 7z
        run: 7z x build/${{ matrix.edition }}-src.zip
      - name: install linux build dependencies
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get install --no-install-recommends -y libopenjp2-tools rpm libarchive-tools
      - name: install dependencies
        working-directory: ${{ matrix.edition }}-src
        run: npm install
      - name: run patch-package
        working-directory: ${{ matrix.edition }}-src
        run: npx patch-package
      - name: install electron and electron-builder
        working-directory: ${{ matrix.edition }}-src
        run: npm install electron@11 electron-builder --save-dev
      - name: run electron-builder
        working-directory: ${{ matrix.edition }}-src
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NOTION_REPACKAGED_EDITION: ${{ matrix.edition }}
        run: node_modules/.bin/electron-builder --${{ matrix.target }} -c ../electron-builder.js

  cleanup:
    name: cleanup artifacts
    if: always()
    needs: [build-app]
    strategy:
      matrix:
        edition: [vanilla, enhanced]
    runs-on: ubuntu-latest
    steps:
      - uses: geekyeggo/delete-artifact@v1
        with:
          name: ${{ matrix.edition }}-sources
